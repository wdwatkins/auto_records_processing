packages:
 - tidyverse
 - assertthat
 - aqapi
 - dataRetrieval
 - utc2nwislocal
 - lubridate
 - dygraphs
 - htmlwidgets
 - xts
 - gridExtra
 
target_default: joined_data_summary
 
sources:
 - R/utilities.R
 - R/pipeline_functions.R
 
targets:
  
  param_to_predict:
    command: c(I('00010'))
  #inclusive bounds, applied during train/test set creation
  upper_bound:
    command: c(I(40))
  lower_bound: 
    command: c(I(0))
  aq_param_to_predict: 
    command: c(I('Gage height'))
    
  sites_parameters:
    command: get_site_sample(states = I(c('PA','GA')),
                             pcodes = param_to_predict,
                             aq_file_name = I('pcode_translation.json'))
    
  data_bundles:
    command: download_data_bundles(sites_parameters, 'R/utilities.R', 'R/pipeline_functions.R')
                          
  #download raw, join, QC
  aquarius_raw_data:
    command: do_aquarius_downloads(sites_parameters, host = I('tsqa-api.nwis.usgs.gov'),
                                  'R/utilities.R', 'R/pipeline_functions.R')
  
  joined_data_summary:
    command: assemble_summarize_data_tasks(sites_parameters = sites_parameters, 
                                           aquarius_data = aquarius_raw_data,
                                           data_bundles = data_bundles,
                                           param_to_predict = param_to_predict,
                                           aq_param_to_predict = aq_param_to_predict,
                                           'R/utilities.R', 'R/pipeline_functions.R', 
                                           'R/summary_plots.R')
  model_inventory:
    command: do_model_tasks(joined_data_summary = joined_data_summary,
                         split_method = I('test_future'), 
                         lower_bound_include = lower_bound,
                         upper_bound_include = upper_bound,
                         'R/models.R')